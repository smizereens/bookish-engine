# Main server block listening on port 80
server {
    listen 80;
    # Replace with your actual domain name(s) or use localhost for local dev
    server_name localhost yourdomain.com www.yourdomain.com;
    # Hide Nginx version in headers
    server_tokens off;

    # Set maximum allowed size of the client request body, adjust if needed for large image uploads
    client_max_body_size 20M;

    # Location block for serving frontend static build files (React app)
    location / {
        # Root directory where frontend build files are located (matches volume mount)
        root /usr/share/nginx/html;
        # Default file to serve
        index index.html index.htm;
        # Handle Single Page Application (SPA) routing:
        # If the requested URI is not found as a file, serve index.html
        try_files $uri /index.html;
    }

    # Location block for serving Django Media files (user uploads)
    location /media/ {
        # Alias to the directory where media files are stored (matches volume mount)
        # Use 'alias' because the URL path doesn't directly map to the filesystem path part
        alias /var/html/media/;
    }

    # Location block for serving Django Static files (collected by collectstatic)
    location /static/ {
        # Alias to the directory where static files are stored (matches volume mount)
        alias /var/html/static/;
    }

    # Location block for proxying API requests to the backend Gunicorn server
    location /api/ {
        # Forward the original host header
        proxy_set_header Host $host;
        # Forward the client's real IP address
        proxy_set_header X-Real-IP $remote_addr;
        # Forward the list of IP addresses (including proxies)
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # Forward the original protocol (http or https)
        proxy_set_header X-Forwarded-Proto $scheme;
        # The address of the backend service defined in docker-compose.yml
        proxy_pass http://backend:8000; # Match backend service name and exposed port
    }

    # Optional: Custom error pages
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html; # Assuming error pages are in the frontend build
    # }

    # Optional: Redirect HTTP to HTTPS if you set up SSL certificates
    # listen 443 ssl;
    # ssl_certificate /path/to/your/fullchain.pem;
    # ssl_certificate_key /path/to/your/privkey.pem;
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # }
}
